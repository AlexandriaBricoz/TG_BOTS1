import json
import asyncio
import traceback

from aiogram import types, F
from aiogram.fsm.context import FSMContext

from loader import dp, loop, bot

from data.config import *
from states import Support
from keyboards.user import support_keyboard

@dp.message(F.text == 'üßæ –ü—Ä–∞–≤–∏–ª–∞ –±–æ—Ç–∞')
async def message_handler_rules(message: types.Message, state: FSMContext):
    await state.clear()    
    
    await message.answer('1. –°–∞–º–æ–µ –≥–ª–∞–≤–Ω–æ–µ –ø—Ä–∞–≤–∏–ª–∞ –Ω–µ –æ–±–º–∞–Ω—ã–≤–∞—Ç—å, –µ—Å–ª–∏ –≤—ã –∫–Ω–∞–º —á–µ—Å—Ç–Ω–æ —Ç–æ –∏ –º—ã –∫ –≤–∞–º —Ç–∞–∫ –∂–µ –∏–Ω–∞—á–µ –ø—Ä–∏–µ–¥–µ–º –≤ –≥–æ—Å—Ç–∏).\n2. –ù–µ –ª–æ–º–∞—Ç—å –±–æ—Ç–∞! —Ç.–µ. –Ω–µ –∫–ª–∏–∫–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–ª–∏–æ–Ω–æ–≤ —Ä–∞–∑, –Ω—É–∂–Ω–æ —É –º–µ—Ç—å –∂–¥–∞—Ç—å.\n3.–°–∫–æ—Ä–æ –±—É–¥–µ—Ç...')

@dp.message(F.text == 'ü¶π‚Äç‚ôÇÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫–µ')
async def message_handler_support(message: types.Message, state: FSMContext):
    await state.clear()    

    await state.update_data(chat_id=SUPPORT_CHAT_ID)

    await message.answer('‚úã –ü—Ä–∏–≤–µ—Ç–Ω—É—é –≤–æ—Ä–∫–µ—Ä!\nüìù –ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –∏ –≤ –±–ª–∏–∂–∞–π—à–∏–µ –≤—Ä–µ–º—è –≤–∞–º –æ—Ç–≤–µ—Ç—è—Ç, –Ω–µ –Ω–∞–¥–æ –ø–∏—Å–∞—Ç—å –≤ –ª–∏—á–∫—É (–µ—Å–ª–∏ —ç—Ç–æ –Ω–µ —Å—Ä–æ—á–Ω–æ –∏ —Ç–æ–≥–æ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–∞)')
    await state.set_state(Support.get_message)

@dp.callback_query(F.data.startswith('support_answer'))
async def callback_support_answer(call: types.CallbackQuery, state: FSMContext):
    chat_id = call.data.split(';')[1]
    await state.update_data(chat_id=chat_id)

    await call.message.edit_reply_markup()
    await call.message.answer('üìù –ù–∞–ø–∏—à–∏—Ç–µ –æ—Ç–≤–µ—Ç:')

    await state.set_state(Support.get_message)

@dp.message(Support.get_message)
async def message_handler_support(message: types.Message, state: FSMContext):
    data = await state.get_data()
    chat_id = data['chat_id']
    await state.clear()
    message_text = message.text

    if chat_id == SUPPORT_CHAT_ID:
        username = message.from_user.username
        message_text = f'üôã‚Äç‚ôÇÔ∏è –ü–æ–ª—å–∑–æ–≤–∞–µ—Ç–ª—å <code>{message.from_user.id}</code> - @{username}üìù –Ω–∞–ø–∏—Å–∞–ª —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.\n\n{message_text}'
    else:
        message_text = f'üì© –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –æ—Ç–≤–µ—Ç–∏–ª–∞ –Ω–∞ –≤–∞—à—É –∑–∞—è–≤–∫—É\n\n{message_text}'

    markup = support_keyboard(message.chat.id)
    try:
        await bot.send_message(chat_id, message_text, reply_markup=markup)
    except Exception: pass